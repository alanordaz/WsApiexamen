//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApp.ExamenService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="App", Namespace="http://schemas.datacontract.org/2004/07/WsApiexamen")]
    [System.SerializableAttribute()]
    public partial class App : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idExamenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idExamen {
            get {
                return this.idExamenField;
            }
            set {
                if ((this.idExamenField.Equals(value) != true)) {
                    this.idExamenField = value;
                    this.RaisePropertyChanged("idExamen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ExamenService.AppService")]
    public interface AppService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/AgregarExamen", ReplyAction="http://tempuri.org/AppService/AgregarExamenResponse")]
        int AgregarExamen(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/AgregarExamen", ReplyAction="http://tempuri.org/AppService/AgregarExamenResponse")]
        System.Threading.Tasks.Task<int> AgregarExamenAsync(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/ActualizarExamen", ReplyAction="http://tempuri.org/AppService/ActualizarExamenResponse")]
        int ActualizarExamen(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/ActualizarExamen", ReplyAction="http://tempuri.org/AppService/ActualizarExamenResponse")]
        System.Threading.Tasks.Task<int> ActualizarExamenAsync(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/EliminarExamen", ReplyAction="http://tempuri.org/AppService/EliminarExamenResponse")]
        int EliminarExamen(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/EliminarExamen", ReplyAction="http://tempuri.org/AppService/EliminarExamenResponse")]
        System.Threading.Tasks.Task<int> EliminarExamenAsync(WebApp.ExamenService.App app);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/ConsultarExamen", ReplyAction="http://tempuri.org/AppService/ConsultarExamenResponse")]
        WebApp.ExamenService.App ConsultarExamen(int idcontacto, string Nombre, string Descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/ConsultarExamen", ReplyAction="http://tempuri.org/AppService/ConsultarExamenResponse")]
        System.Threading.Tasks.Task<WebApp.ExamenService.App> ConsultarExamenAsync(int idcontacto, string Nombre, string Descripcion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/mostrarExamenes", ReplyAction="http://tempuri.org/AppService/mostrarExamenesResponse")]
        WebApp.ExamenService.App[] mostrarExamenes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AppService/mostrarExamenes", ReplyAction="http://tempuri.org/AppService/mostrarExamenesResponse")]
        System.Threading.Tasks.Task<WebApp.ExamenService.App[]> mostrarExamenesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface AppServiceChannel : WebApp.ExamenService.AppService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppServiceClient : System.ServiceModel.ClientBase<WebApp.ExamenService.AppService>, WebApp.ExamenService.AppService {
        
        public AppServiceClient() {
        }
        
        public AppServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AgregarExamen(WebApp.ExamenService.App app) {
            return base.Channel.AgregarExamen(app);
        }
        
        public System.Threading.Tasks.Task<int> AgregarExamenAsync(WebApp.ExamenService.App app) {
            return base.Channel.AgregarExamenAsync(app);
        }
        
        public int ActualizarExamen(WebApp.ExamenService.App app) {
            return base.Channel.ActualizarExamen(app);
        }
        
        public System.Threading.Tasks.Task<int> ActualizarExamenAsync(WebApp.ExamenService.App app) {
            return base.Channel.ActualizarExamenAsync(app);
        }
        
        public int EliminarExamen(WebApp.ExamenService.App app) {
            return base.Channel.EliminarExamen(app);
        }
        
        public System.Threading.Tasks.Task<int> EliminarExamenAsync(WebApp.ExamenService.App app) {
            return base.Channel.EliminarExamenAsync(app);
        }
        
        public WebApp.ExamenService.App ConsultarExamen(int idcontacto, string Nombre, string Descripcion) {
            return base.Channel.ConsultarExamen(idcontacto, Nombre, Descripcion);
        }
        
        public System.Threading.Tasks.Task<WebApp.ExamenService.App> ConsultarExamenAsync(int idcontacto, string Nombre, string Descripcion) {
            return base.Channel.ConsultarExamenAsync(idcontacto, Nombre, Descripcion);
        }
        
        public WebApp.ExamenService.App[] mostrarExamenes() {
            return base.Channel.mostrarExamenes();
        }
        
        public System.Threading.Tasks.Task<WebApp.ExamenService.App[]> mostrarExamenesAsync() {
            return base.Channel.mostrarExamenesAsync();
        }
    }
}
